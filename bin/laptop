#!/usr/bin/env bash

###
### laptop â€” A tool for maintaining your laptop (cleaning, upgrading, etc)
###
### Usage: laptop [options] <subcommand>
###
### Options:
###   -h,--help: Show this message.
###
### Subcommands:

SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"
ROOT_DIR=$(dirname "$SCRIPT_DIR")

LAPTOP_HOME=${LAPTOP_HOME:-"$ROOT_DIR"}
source "$LAPTOP_HOME/src/env.sh"
laptop_source_all "$ROOT_DIR/src/recipes"
source "$ROOT_DIR/src/command/cleanup.sh"
source "$ROOT_DIR/src/command/configure.sh"
source "$ROOT_DIR/src/command/upgrade.sh"

###   cleanup: empty cache and prune unused resources
###   configure: install and setup every tool for the current profile for this device
###   upgrade: upgrade all tools and packages
###   help: show this message
laptop_command__help() {
  sed -rn 's/^### ?//p' "$0"
}

###
### Environment variables:
###   LAPTOP_HOME: Local folder of installation of the laptop executable and library
###   LAPTOP_GIT_REMOTE: Git repository location used as zsh plugin. It can be :
###     - A github repository name (ex: jpolo/laptop)
###     - A full git url (ex: https://github.com/jpolo/laptop.git)
###   LAPTOP_PROFILE: current profile to use for the configure sub command
###     the profile source must be available at `$LAPTOP_HOME/profile/$LAPTOP_PROFILE/profile.sh`

# Run the program
SUBCOMMAND=$1
case $SUBCOMMAND in
  "" | "-h" | "--help")
    laptop_command__help
    ;;
  *)
    shift
    laptop_command__${SUBCOMMAND} $@
    if [ $? = 127 ]; then
      echo "Error: '$SUBCOMMAND' is not a known subcommand." >&2
      echo "       Run '$SCRIPT_NAME --help' for a list of known subcommands." >&2
      exit 1
    fi
    ;;
esac
