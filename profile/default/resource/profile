#âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯
# Shell profile initialization script
#
# ðŸš¨ Warning : this file was automatically generated, editing it is not recommended
#âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯

_path_prepend() {
  for ARG in "$@"
  do
    if [ -d "$ARG" ] && [[ ":$PATH:" != *":$ARG:"* ]]; then
        PATH="$ARG${PATH:+":$PATH"}"
    fi
  done
}

_path_append() {
  for ARG in "$@"
  do
    if [ -d "$ARG" ] && [[ ":$PATH:" != *":$ARG:"* ]]; then
        PATH="${PATH:+"$PATH:"}$ARG"
    fi
  done
}

_xdg_init() {
  # Make sure XDG dirs are set

  # Init default platform directories
  # https://github.com/adrg/xdg/blob/master/README.md#xdg-base-directory
  local XDG_CONFIG_HOME_DEFAULT XDG_CACHE_HOME_DEFAULT XDG_DATA_HOME_DEFAULT XDG_STATE_HOME_DEFAULT
  if [[ "$OSTYPE" == "darwin"* ]]; then
    XDG_CONFIG_HOME_DEFAULT="$HOME/Library/Preferences"
    XDG_CACHE_HOME_DEFAULT="$HOME/Library/Caches"
    XDG_DATA_HOME_DEFAULT="$HOME/Library"
    XDG_STATE_HOME_DEFAULT="$HOME/Library/Application Support"
  else
    XDG_CONFIG_HOME_DEFAULT="$HOME/.config"
    XDG_CACHE_HOME_DEFAULT="$HOME/.cache"
    XDG_DATA_HOME_DEFAULT="$HOME/.local/share"
    XDG_STATE_HOME_DEFAULT="$HOME/.local/state"
  fi
  # export variables
  [[ -n "$XDG_CONFIG_HOME" ]] || export XDG_CONFIG_HOME=$XDG_CONFIG_HOME_DEFAULT
  [[ -n "$XDG_CACHE_HOME"  ]] || export XDG_CACHE_HOME=$XDG_CACHE_HOME_DEFAULT
  [[ -n "$XDG_DATA_HOME"   ]] || export XDG_DATA_HOME=$XDG_DATA_HOME_DEFAULT
  [[ -n "$XDG_STATE_HOME"  ]] || export XDG_STATE_HOME=$XDG_STATE_HOME_DEFAULT

  # XDG directories
  [[ -n "$XDG_DESKTOP_DIR"     ]] || export XDG_DESKTOP_DIR="$HOME/Desktop"
  [[ -n "$XDG_DOCUMENTS_DIR"   ]] || export XDG_DOCUMENTS_DIR="$HOME/Documents"
  [[ -n "$XDG_DOWNLOAD_DIR"    ]] || export XDG_DOWNLOAD_DIR="$HOME/Downloads"
  [[ -n "$XDG_MUSIC_DIR"       ]] || export XDG_MUSIC_DIR="$HOME/Music"
  [[ -n "$XDG_PICTURES_DIR"    ]] || export XDG_PICTURES_DIR="$HOME/Pictures"
  [[ -n "$XDG_PUBLICSHARE_DIR" ]] || export XDG_PUBLICSHARE_DIR="$HOME/Public"
  [[ -n "$XDG_TEMPLATES_DIR"   ]] || export XDG_TEMPLATES_DIR="$HOME/Templates"
  [[ -n "$XDG_VIDEOS_DIR"      ]] || export XDG_VIDEOS_DIR="$HOME/Videos"

  # Source file
  [[ -r "${XDG_CONFIG_HOME}/user-dirs.dirs" ]] && {
    . ${XDG_CONFIG_HOME}/user-dirs.dirs
    # TODO export variables
  }
}

_xdg_init

# jenv, rbenv, etc
export ANSIBLE_HOME="$XDG_CONFIG_HOME/ansible"
export ANSIBLE_GALAXY_CACHE_DIR="${XDG_CACHE_HOME}/ansible/galaxy_cache"
export BUNDLE_USER_CONFIG="$XDG_CONFIG_HOME/bundle"
export BUNDLE_USER_CACHE="$XDG_CACHE_HOME/bundle"
export BUNDLE_USER_PLUGIN="$XDG_DATA_HOME/bundle"
export CABAL_DIR="$XDG_CACHE_HOME/cabal"
export CABAL_CONFIG="$XDG_CONFIG_HOME/cabal/config"
export CARGO_HOME="$XDG_DATA_HOME/cargo"
export CP_HOME_DIR="$XDG_DATA_HOME/cocoapods"
#export DOCKER_CONFIG="$XDG_CONFIG_HOME/docker" ðŸŸ  Does not work well on macOS
export ELM_HOME="$XDG_CONFIG_HOME/elm"
export MACHINE_STORAGE_PATH="$XDG_DATA_HOME/docker-machine"
export GHCUP_USE_XDG_DIRS=1
# export GEM_HOME="$XDG_DATA_HOME/gem"
export GEM_SPEC_CACHE="$XDG_CACHE_HOME/gem"
export GOPATH="$XDG_DATA_HOME/go"
export GOMODCACHE="$XDG_CACHE_HOME/go/mod"
export GRADLE_USER_HOME="$XDG_CACHE_HOME/gradle"
export HISTFILE="$XDG_STATE_HOME/zsh/history"
export JENV_ROOT="$XDG_DATA_HOME/jenv"
export JUPYTER_CONFIG_DIR="$XDG_CONFIG_HOME/jupyter"
# export KUBECONFIG="$XDG_CONFIG_HOME/kube"
export KUBECACHEDIR="$XDG_CACHE_HOME/kube"
export LESSHISTFILE="$XDG_STATE_HOME/less/history"
export LESSKEY="$XDG_CONFIG_HOME/less/lesskey"
export MINIKUBE_HOME="$XDG_DATA_HOME/minikube"
export NODE_REPL_HISTORY="$XDG_DATA_HOME/node/repl_history"
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm/config"
# export NPM_CONFIG_PREFIX="$XDG_DATA_HOME/npm"
# export NPM_CONFIG_INIT_MODULE="$XDG_DATA_HOME"/npm/config/npm-init.js
export NPM_CONFIG_CACHE="$XDG_CACHE_HOME/npm"
export NPM_CONFIG_DEVDIR="$XDG_CACHE_HOME/node-gyp"
# export rvm_path="$XDG_DATA_HOME/rvm"
export NVM_DIR="$XDG_DATA_HOME/nvm"
export OLLAMA_MODELS="$XDG_DATA_HOME/ollama/models"
# export ASDF_DIR="$XDG_DATA_HOME/asdf"
export ASDF_CONFIG_FILE="$XDG_CONFIG_HOME/asdf/asdfrc"
export ASDF_DATA_DIR="$XDG_DATA_HOME/asdf"
export POWERLEVEL9K_CONFIG_FILE="$XDG_CONFIG_HOME/zsh/p10k.zsh"
export PYENV_ROOT="$XDG_DATA_HOME/pyenv"
export RBENV_ROOT="$XDG_DATA_HOME/rbenv"
export SOLARGRAPH_CACHE="$XDG_CACHE_HOME/solargraph"
export TERMINFO="$XDG_DATA_HOME/terminfo"
export TERMINFO_DIRS="$XDG_DATA_HOME/terminfo:/usr/share/terminfo"
export VOLTA_HOME="$XDG_DATA_HOME/volta"
# export VSCODE_PORTABLE="$XDG_DATA_HOME/vscode"
# export VSCODIUM_PORTABLE="$XDG_DATA_HOME/vscode"


# Initialize brew
for prefix in "/opt/homebrew" "/usr/local" "$HOME/.linuxbrew" "/home/linuxbrew"
do
  if [ -f "$prefix/bin/brew" ] ; then
    eval "$("$prefix/bin/brew" shellenv)"
    break
  fi
done

if [ -z "$ANDROID_HOME" ]; then
  if [ -d "$HOME/Library/Android/sdk" ]; then
    export ANDROID_HOME="$HOME/Library/Android/sdk"
  elif [ -d "/usr/local/opt/android-sdk" ]; then
    export ANDROID_HOME="/usr/local/opt/android-sdk"
  fi
  if [ ! -z "$ANDROID_HOME" ]; then
    _path_append "$ANDROID_HOME/platform-tools"
    _path_append "$ANDROID_HOME/cmdline-tools/latest/bin"
  fi
fi

# https://github.com/sorin-ionescu/prezto/blob/master/runcoms/zshenv
# Ensure that a non-login, non-interactive shell has a defined environment.
# if [[ ( "$SHLVL" -eq 1 && ! -o LOGIN ) && -s "${ZDOTDIR:-$HOME}/.zprofile" ]]; then
#   source "${ZDOTDIR:-$HOME}/.zprofile"
# fi

# set PATH so it includes user's private bin if it exists
_path_prepend "/usr/sbin"
_path_prepend "/usr/local/bin"
_path_prepend "/snap/bin"
_path_prepend "$HOME/bin"
_path_prepend "$HOME/.bin"
_path_prepend "$HOME/.local/bin"
if [ ! -z "$CARGO_HOME" ]; then
  _path_append "$CARGO_HOME/bin"
fi
if [ ! -z "$GEM_HOME" ]; then
  _path_append "$GEM_HOME/bin"
fi
_path_append "$HOME/Application"
_path_append "$HOME/Applications"
_path_prepend "$ASDF_DATA_DIR/shims"
_path_append "$HOME/.yarn/bin"
export PATH


# Clean functions
unset -f _path_append _path_prepend _xdg_init
